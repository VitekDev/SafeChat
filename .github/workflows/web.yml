name: Build

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: 🎉 Build
    runs-on: ubuntu-latest

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v2

      - name: 🧩 Insert Secrets
        run: |
          echo "// File generated by FlutterFire CLI. // ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members import 'package:firebase_core/firebase_core.dart'     show FirebaseOptions; import 'package:flutter/foundation.dart'     show defaultTargetPlatform, kIsWeb, TargetPlatform;  /// Default [FirebaseOptions] for use with your Firebase apps. /// /// Example: /// ```dart /// import 'firebase_options.dart'; /// // ... /// await Firebase.initializeApp( ///   options: DefaultFirebaseOptions.currentPlatform, /// ); /// ``` class DefaultFirebaseOptions {   static FirebaseOptions get currentPlatform {     if (kIsWeb) {       return web;     }     switch (defaultTargetPlatform) {       case TargetPlatform.android:         return android;       case TargetPlatform.iOS:         return ios;       case TargetPlatform.macOS:         return macos;       case TargetPlatform.windows:         throw UnsupportedError(           'DefaultFirebaseOptions have not been configured for windows - '           'you can reconfigure this by running the FlutterFire CLI again.',         );       case TargetPlatform.linux:         throw UnsupportedError(           'DefaultFirebaseOptions have not been configured for linux - '           'you can reconfigure this by running the FlutterFire CLI again.',         );       default:         throw UnsupportedError(           'DefaultFirebaseOptions are not supported for this platform.',         );     }   }    static const FirebaseOptions web = FirebaseOptions(     apiKey: '${{secrets.APIKEY }}',     appId: '${{secrets.APPID }}',     messagingSenderId: '${{secrets.MESSAGINGSENDERID }}',     projectId: '${{secrets.PROJECTID }}',     authDomain: '${{secrets.AUTHDOMAIN }}',     storageBucket: '${{secrets.STORAGEBUCKET }}',     measurementId: '${{secrets.MEASUREMENTID }}',   );    static const FirebaseOptions android = FirebaseOptions(     apiKey: 'AIzaSyBQmm2qkzplZLWjjLqQA2IFhPRkNCgBOvU',     appId: '1:80078589156:android:f0f32f662e803c003e30f1',     messagingSenderId: '80078589156',     projectId: 'chat-92d56',     storageBucket: 'chat-92d56.appspot.com',   );    static const FirebaseOptions ios = FirebaseOptions(     apiKey: 'AIzaSyCHJ7QClnIy_zM4-eQyRjuUuqx62wWiR6s',     appId: '1:80078589156:ios:0bf807b81beea1523e30f1',     messagingSenderId: '80078589156',     projectId: 'chat-92d56',     storageBucket: 'chat-92d56.appspot.com',     iosClientId:         '80078589156-od1eglniccojel1ob9hjtvsuo2ngikkf.apps.googleusercontent.com',     iosBundleId: 'com.example.chatApp',   );    static const FirebaseOptions macos = FirebaseOptions(     apiKey: 'AIzaSyCHJ7QClnIy_zM4-eQyRjuUuqx62wWiR6s',     appId: '1:80078589156:ios:0bf807b81beea1523e30f1',     messagingSenderId: '80078589156',     projectId: 'chat-92d56',     storageBucket: 'chat-92d56.appspot.com',     iosClientId:         '80078589156-od1eglniccojel1ob9hjtvsuo2ngikkf.apps.googleusercontent.com',     iosBundleId: 'com.example.chatApp',   ); }" > lib/firebase_options.dart

      - name: 🎉 Build
        uses: subosito/flutter-action@v1

      - name: 🎉 Build Web
        uses: bluefireteam/flutter-gh-pages@v7
        with:
          baseHref: /SafeChat/
        
      - name: 🎉 Build Android
        run: flutter build apk
      - name: 🎉 Publish
        uses: actions/upload-artifact@v1
        with:
          name: SafeChat
          path: build/app/outputs/apk/release/app-release.apk
